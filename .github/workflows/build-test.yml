name: "Build test"
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build container images
      run: |
        docker build -t snapcraft_image --force-rm=true --rm=true -f .github/docker/ubuntu/snapcraft.Dockerfile .
    - name: Run the containers
      run: |
        docker run --name=build_container -ti --tmpfs /run --tmpfs /run/lock --tmpfs /tmp --cap-add SYS_ADMIN --device=/dev/fuse --security-opt apparmor:unconfined --security-opt seccomp:unconfined -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v /lib/modules:/lib/modules:ro -d snapcraft_image
        docker exec -w /workdir build_container /bin/bash -c "snap wait system seed.loaded" 
    - name: Install snapcraft
      run: |
        docker exec -w /workdir build_container /bin/bash -c "snap install snapcraft --classic"
    - name: Build dmd
      run: |
        docker exec -w /workdir build_container /bin/bash -c "snapcraft"
        docker exec -w /workdir build_container /bin/bash -c "cp *.snap /artifacts"
        docker cp build_container:/artifacts/ dmd-snap
    - name: Test install dmd snap 
      run: |
        docker exec -w /workdir build_container /bin/bash -c "snap install --classic --dangerous *.snap"
    - name: Test dmd executable
      run: |
        docker exec -w /workdir build_container /bin/bash -c "snap run dmd --version"
        docker exec -w /workdir build_container /bin/bash -c "dmd --version"
    - uses: actions/upload-artifact@master
      with:
        name: dmd-snap
        path: dmd-snap
